name: CI – Build

on:
  push:
    branches:
      - main         # quando fizer push direto na main
      - dev          # mantém seu fluxo de dev
  pull_request:
    branches:
      - main         # para PRs apontando pra main

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      (startsWith(github.ref, 'refs/heads/main') ||
       startsWith(github.ref, 'refs/heads/dev')) &&
      contains(github.event.head_commit.message, 'BUILD')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calcular versão
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          IDS_FRJ=( $(git log $LAST_TAG..HEAD --grep 'FRJ-' --pretty=%s \
                    | grep -o 'FRJ-[0-9]\+' | sort -u) )
          IDS_SUS=( $(git log $LAST_TAG..HEAD --grep 'SUS-' --pretty=%s \
                    | grep -o 'SUS-[0-9]\+' | sort -u) )
          COUNT_FRJ=${#IDS_FRJ[@]}
          COUNT_SUS=${#IDS_SUS[@]}
          SHORT_COMMIT=$(git rev-parse --short HEAD)
          SUMMARY="$LAST_TAG+f${COUNT_FRJ}s${COUNT_SUS}"
          KEY="${SUMMARY}-h${SHORT_COMMIT}"
          echo "FULL_VERSION_SUMMARY=$SUMMARY" >> $GITHUB_ENV
          echo "FULL_VERSION_KEY=$KEY"         >> $GITHUB_ENV

      - name: Setup Unity
        uses: game-ci/unity-setup@v2
        with:
          unityVersion: 2021.3.0f1
          activateLicense: true
          modules: WebGL

      - name: Injetar BuildInfo
        run: |
          Unity -batchmode \
                -projectPath . \
                -executeMethod BuildInfoGenerator.SetBuildInfo \
                -quit

      - name: Build WebGL
        run: |
          Unity -batchmode \
                -projectPath . \
                -buildTarget WebGL \
                -customBuildPath Builds/WebGL/${{ github.ref_name }} \
                -quit

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build-${{ github.ref_name }}
          path: Builds/WebGL/${{ github.ref_name }}
